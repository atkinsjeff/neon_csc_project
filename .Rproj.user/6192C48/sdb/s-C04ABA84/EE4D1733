{
    "collab_server" : "",
    "contents" : "# Plots for publication\n\n#\nrequire(plyr)\nrequire(ggplot2)\nrequire(dplyr)\nrequire(vegan)\nrequire(ggrepel)\nrequire(magrittr)\n\n#adding in palette\nlibrary(RColorBrewer)\ndarkcols <- brewer.pal(10, \"Dark2\")\n\n#Data import\nplot.fpar <- read.csv(\"./data/laserquest_plot_means_fpar_csc.csv\")\n\n# designate light regime based on aPAR or above canopy PAR\nplot.fpar$regime <- ifelse(plot.fpar$aPAR_mean >= 1000, \"high\",\n                             \"low\")\n\nplot.fpar$regime <- as.factor(plot.fpar$regime)\n\n### Modeling section\n#Subset data for modelling\nhigh <- subset(plot.fpar, aPAR_mean >= 1000)\nlow <- subset(plot.fpar, aPAR_mean < 1000)\n\n\n###########\n\n#new.master <- read.csv(\"laserquest_plot_means_with_fPAR.CSV\")\n#custom plot theme for all\ntheme_new <- function(base_size = 12){\n     theme_bw(base_size = base_size) %+replace%\n          theme(\n               #line = element_line(colour=\"black\"),\n               #text = element_text(colour=\"black\"),\n               #axis.text = element_text(colour=\"black\", size=8),\n               #strip.text = element_text(size=12),\n               #legend.key=element_rect(colour=NA, fill =NA),\n               panel.grid = element_blank(),   \n               # panel.border = element_blank(),\n               panel.background = element_rect(fill = \"white\", colour = \"white\"), \n               strip.background = element_rect(fill = NA),\n               axis.text = element_text( size = 14),\n               axis.ticks.x = element_blank(),\n               axis.ticks.y = element_blank(),\n               axis.title  = element_text( size = 16, margin = margin(12, unit = \"cm\"))\n          )\n     \n}\n# custom plot label\n\nvai.label =  expression(paste(VAI~(m^2 ~m^-2)))\nlai.label =  expression(paste(LAI~(m^2 ~m^-2)))\nlog.lai.label = expression(paste(log~( LAI~(m^2 ~m^-2))))\nr.label = expression(\"R\"[C])\nfpar.label = expression(paste(italic(\"f\"), \"PAR\"))\n\n\n\n# break up the light regimes\n# \n# high <- subset(master, master$regime == \"high\")\n# low <- subset(master, master$regime == \"low\")\n\n#Imports high and low from fPAR modeling script\n\n# Canopy Rugosity Model under high light\ny <- high$fPAR_mean\nx <- high$rugosity_mean\nrc.model <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 0.1, b = 1, k = 0.1))\nAIC(rc.model)\nsummary(rc.model)\n\n#coefficients\na <- coef(rc.model)[1] \nb <- coef(rc.model)[2]\nk <- coef(rc.model)[3]\n\nrc.fit <- function(x) ifelse(x >= 0.05 & x <= 35, (a / (1 + b * exp(-k * x))), NA)\n\n# Canopy Rugosity under low light\ny <- low$fPAR_mean\nx <- low$rugosity_mean\nrc.low.model <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\nAIC(rc.low.model)\n\n#coefficients\na <- coef(rc.low.model)[1] \nb <- coef(rc.low.model)[2]\n\nrc.low.fit <- function(x) ifelse(x >= 3 & x<= 30, (a * x) / (b + x), NA)\n     { (a * x) / (b + x)}\n\nx11(width = 4, height = 4)\nrc.plot <- ggplot(plot.fpar, aes(x = rugosity_mean, y = fPAR_mean, fill = regime))+\n     geom_point(size = 3, shape = 21)+\n     scale_fill_manual(values = c(\"black\", \"white\"))+\n     # geom_point( data = low, aes( x = rugosity_mean, y = fPAR_mean), size = 3, shape = 21)+\n     theme_new()+\n     ylim(c(0, 1))+\n     scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n     xlim(c(0,45))+\n     xlab(r.label)+\n     ylab(fpar.label)+\n     stat_function(fun = rc.fit, col = \"blue\", size = 1)+\n     stat_function(fun = rc.low.fit, col = \"blue\", size = 1, linetype = \"dashed\")+\n     theme(legend.position=\"none\")\n\n\n#####################################\n\n# TOP RUGOSITY\n\n#Top Rugosity\n#Top Rugosity under high light\ny <- high$fPAR_mean\nx <- high$top.rugosity_mean\nrt.model <- lm( y ~ x)\n\nAIC(rt.model)\nRSS <- sum(residuals(rt.model)^2)\nTSS <- sum((y - mean(y))^2)\nR.square <- 1 - (RSS/TSS)\nprint(R.square)\n\nrt.fit <- function(x) \n\nx11(width = 4, height = 4)\nrt.plot <- ggplot(plot.fpar, aes(x = top.rugosity_mean, y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0,15))+\n  ylim(c(0, 1))+\n  xlab(expression(\"R\"[T]))+\n  ylab(fpar.label)+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  geom_smooth(data = subset(plot.fpar, plot.fpar$regime == \"high\"), method = \"lm\", size = 1, se = FALSE, color = \"blue\")+\n  theme(legend.position=\"none\")\n\n\n\n# Canopy Porosity\n\n# Canopy Porosity under high light\ny <- high$fPAR_mean\nx <- high$porosity_mean\n\npc.model <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1.62, b = 1, c = -1.25))\n\n#coefficients\na <- coef(pc.model)[1] \nb <- coef(pc.model)[2]\nc <- coef(pc.model)[3]\n\n#pc.high.fit <- function(x) ifelse(x >= 0.5 & x <= 0.9, a + ((b * x) / (c + x)), NA )\npc.high.fit <- function(x) ifelse(x >= 0.5 & x <= 0.9, 1.622 + ((0.5214 * x) / (-1.2482 + x)), NA )\n\nAIC(pc.model)\nsummary(pc.model)\n\n# Canopy Porosity under  low light\ny <- low$fPAR_mean\nx <- low$porosity_mean\npc.low.model <-nls(y ~ a * (x^b), start = list(a = 1, b = 1))\n\nAIC(pc.low.model)\nsummary(pc.low.model)\n\n#coefficients\na <- coef(pc.low.model)[1] \nb <- coef(pc.low.model)[2]\nc <- coef(pc.low.model)[3]\n\n\npc.low.fit <- function(x) ifelse(x >= 0.5 & x<= 0.9,  a * (x^b), NA)\n\nx11(width = 4, height = 4)\npc.plot <- ggplot(plot.fpar, aes(x = porosity_mean, y = fPAR_mean, fill = regime))+\n     geom_point(size = 3, shape = 21)+\n     scale_fill_manual(values = c(\"black\", \"white\"))+\n     theme_new()+\n     xlim(0.4, 1)+\n     ylim(c(0, 1))+\n     xlab(expression(\"P\"[C]))+\n     ylab(fpar.label)+\n     scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n     stat_function(fun = pc.high.fit, col = \"blue\", size = 1, linetype = \"solid\")+   \n     stat_function(fun = pc.low.fit, col = \"blue\", size = 1, linetype = \"dashed\")+\n     theme(legend.position=\"none\")\n\n\n#########################\n# RUMPLE\n\n# Rumple\n\ny <- high$fPAR_mean\nx <- high$rumple_mean\n\nrump.model <-nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))\nAIC(rump.model)\n\n#coefficients\na <- coef(rump.model)[1] \nb <- coef(rump.model)[2]\n\nrump.fit <- function(x) ifelse(x >= 2 & x <= 10, (1 / (1 + exp(-a * (x - b)))), NA)\n\nx11(width = 4, height = 4)\nrump.plot <- ggplot(plot.fpar, aes(x = rumple_mean, y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0,15))+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  xlab(\"Rumple\")+\n  ylab(fpar.label)+\n  stat_function(fun = rump.fit, col = \"blue\", size = 1)+\n  theme(legend.position=\"none\")\n\n\n\n#################################\n# VAI\n\n# Mean VAI\n# sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))\n\ny <- high$fPAR_mean\nx <- high$mean.vai_mean\n\nvai.model <-nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))\nAIC(vai.model)\n\n#coefficients\na <- coef(vai.model)[1] \nb <- coef(vai.model)[2]\n\nvai.fit <- function(x) {1 / (1 + exp(-a * (x - b)))}\n\n#VAI under low light\n\ny <- low$fPAR_mean\nx <- low$mean.vai_mean\n\nvai.low.model <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.5, b = 0.5))\nAIC(vai.low.model)\n\n#coefficients\nc <- coef(vai.low.model)[1] \nd <- coef(vai.low.model)[2]\n\nvai.low.fit <- function(x) { 1 / (1 + exp(-c * (x - d)))}\n\nx11(width = 4, height = 4)\nvai.plot <- ggplot(plot.fpar, aes(x = mean.vai_mean, y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0,8))+\n  ylab(fpar.label)+\n  xlab(\"VAI\")+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  stat_function(fun = vai.fit, col = \"blue\", size = 1)+\n  stat_function(fun = vai.low.fit, col = \"blue\", size = 1, linetype = \"dashed\")+\n  theme(legend.position=\"none\")\n\n##################################\n# MOCH\n\n# MOCH\n\ny <- high$fPAR_mean\nx <- high$mean.max.ht_mean\n\n#moch.model <-nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b = 10, k = 0.1))\nmoch.model <-nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b = 10, k = 0.1))\n\nAIC(moch.model)\n\n#coefficients\na <- coef(moch.model)[1] \nb <- coef(moch.model)[2]\nk <- coef(moch.model)[3]\n\nmoch.fit <- function(x) ifelse(x >=2 & x <=25, a / (1 + b * exp(-k * x)), NA)\n\nx11(width = 4, height = 4)\nmoch.plot <- ggplot(plot.fpar, aes(x = mean.max.ht_mean , y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(name = \"Light Regime\",\n                    breaks = c(\"high\", \"low\"),\n                    labels = c(\"High\", \"Low\"),values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0,25))+\n  ylim(c(0, 1))+\n  xlab(\"MOCH\")+\n  ylab(\"fPAR\")+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  stat_function(fun = moch.fit, col = \"blue\", size = 1)+\n  theme(legend.position=\"none\")\n\n#########################################\n# deep gap fraction\n# Deep Gaps (ADJUSTED)\n\ny <- high$fPAR_mean\nx <- high$deep.gap.fraction_mean\n\n#dg.model <-nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -6, b = 0.1, k = -1))\ndg.model <- nls(y ~ a + ((b * x) / (c + x)), start = list( a = 0.1, b = 1, c =  1) )\nAIC(dg.model)\n\n#coefficients\na <- coef(dg.model)[1] \nb <- coef(dg.model)[2]\nk <- coef(dg.model)[3]\n\n#dg.fit <- function(x) {a / (1 + b * exp(-k * x))}\n#dg.fit <- function(x) ifelse(x >= 0 & x <=0.8, 0.9379 + ((-1.5107 * x) / (0.6624 + x)))\n\ndg.fit <- function(x) {0.9379 + ((-1.50454 * x) / (0.66598 + x))}\n\nx11(width = 4, height = 4)\ndg.plot <- ggplot(plot.fpar, aes(x = deep.gap.fraction_mean, y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0,1))+\n  ylim(c(0, 1))+\n  xlab(\"Deep Gap Fraction\")+\n  ylab(fpar.label)+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  scale_x_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  stat_function(fun = dg.fit, col = \"blue\", size = 1)+\n  theme(legend.position=\"none\")\n\n##################################\n# Gap Fraction\n\n# Sky/ Gap Fraction\nx <- high$sky.fraction_mean / 100\ny <- high$fPAR_mean\n\ngf.model <- lm( y ~ x)\nsummary(gf.model)\n\n# gap fraction under low light\nx <- low$sky.fraction_mean / 100\ny <- low$fPAR_mean\n\ngf.low.model <- lm( y ~ x)\nsummary(gf.low.model)\n\nsummary(dg.model)\nx11(width = 4, height = 4)\ngf.plot <- ggplot(plot.fpar, aes(x = sky.fraction_mean / 100, y = fPAR_mean, fill = regime))+\n  geom_point(size = 3, shape = 21)+\n  scale_fill_manual(values = c(\"black\", \"white\"))+\n  theme_new()+\n  xlim(c(0, 1))+\n  ylim(c(0, 1))+\n  xlab(expression(Theta))+\n  ylab(fpar.label)+\n  scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  scale_x_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n  geom_smooth(data = subset(plot.fpar, plot.fpar$regime == \"high\"), method = \"lm\", size = 1, se = FALSE, color = \"blue\")+\n  geom_smooth(data = subset(plot.fpar, plot.fpar$regime == \"low\"), method = \"lm\", size = 1, se = FALSE, color = \"blue\", linetype = \"dashed\")+\n  theme(legend.position=\"none\")\n\n####################\n# Clumping Index\ny <- high$fPAR_mean\nx <- high$clumping.index_mean\n\nci.model <- nls(y ~ (a + ((b * x) / (c + x))), start = list( a = -1, b = 0.1, c =  -1))\nAIC(ci.model)\n\n#coefficients\na <- coef(ci.model)[1] \nb <- coef(ci.model)[2]\nc <- coef(ci.model)[3]\nci.fit <- function(x) ifelse(x >= 0.72 & x<= 0.99,  a + ((b * x) / (c + x)), NA)\n\n\n\n# Clumping index under low light\ny <- low$fPAR_mean\nx <- low$clumping.index_mean\nci.low.model <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = -1, b = 1))\n\nAIC(ci.low.model)\nsummary(ci.low.model)\n\n#coefficients\nd <- coef(ci.low.model)[1] \ne <- coef(ci.low.model)[2]\n\n\nci.low.fit <- function(x) ifelse(x >= 0.72 & x<= 0.99, (1 / (1 + exp(-d * (x - e)))), NA)\n\n\nx11(width = 4, height = 4)\nci.plot <- ggplot(plot.fpar, aes(x = clumping.index_mean, y = fPAR_mean, fill = regime))+\n     geom_point(size = 3, shape = 21)+\n     scale_fill_manual(values = c(\"black\", \"white\"))+\n     theme_new()+\n     ylim(c(0, 1))+\n     xlim(c(0.7, 1))+\n     xlab(expression(Omega))+\n     ylab(fpar.label)+\n     scale_y_continuous(breaks = seq(0, 1, 0.5), limits = c(0, 1))+\n     stat_function(fun = ci.fit, col = \"blue\", size = 1)+\n     stat_function(fun = ci.low.fit, col = \"blue\", size = 1, linetype = \"dashed\")+\n     theme(legend.position=\"none\")\n\n\n################################################################################\n#######SITE FACET PLOTS\n\nmaster.site <- read.csv(\"./data/laserquest_site_means_fpar_csc.csv\")\ncolnames(master.site)[3] <- \"fPAR_mean\"\n\n####### SITE LEVEL\n####### SITE LEVEL\n# Light!\n\nrequire(plyr)\nrequire(ggplot2)\nrequire(dplyr)\nrequire(vegan)\nrequire(magrittr)\nrequire(ggrepel)\n\n#adding in palette\nlibrary(RColorBrewer)\ndarkcols <- brewer.pal(10, \"Dark2\")\n\n\n# SITE MODELLING\n#RUGOSITY\n#HIGH\ny <- master.site$fPAR_mean\nx <- master.site$rugosity_mean\n\n\nm.rc.site<- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\nsummary(m.rc.site)\nAIC(m.rc.site)\n\nfit.rc.site <- function(x) {(1.08604 * x) / (3.43236 + x)}\n\nx11(width = 4, height = 4)\nsite.rc <- ggplot(master.site, aes(x = rugosity_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(rugosity_mean, fPAR_mean, label = siteID))+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     theme_new()+\n     xlim(c(0, 45))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     xlab(expression(\"R\"[C]))+\n     ylab(fpar.label)+\n     stat_function(fun = fit.rc.site, col = \"blue\", size = 1)\n# stat_function(fun = function(x) (0.97624 * x) / (1.74132 + x), colour = \"dark grey\", size = 1.25)\n\n# Top Rugosity\nx11(width = 4, height = 4)\nsite.rt <- ggplot(master.site, aes(x = top.rugosity_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     theme_new()+\n     xlim(c(0, 15))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     xlab(expression(\"R\"[T]))+\n     ylab(fpar.label)\n\n# Porosity\nsummary(lm(master.site$fPAR_mean ~ master.site$porosity_mean))\n\nx11(width = 4, height = 4)\nsite.pc <- ggplot(master.site, aes(x = porosity_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(porosity_mean, fPAR_mean, label = siteID), force = 10)+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     theme_new()+\n     xlim(c(0.6, 1))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     xlab(expression(\"P\"[C]))+\n     ylab(fpar.label)+\n     geom_smooth(method = lm, se = FALSE, col = \"blue\", size = 1)\n\n# Rumple\n\ny <- master.site$fPAR_mean\nx <- master.site$rumple_mean\n\n\nm.rump.site<- nls(y ~ 1 / (1 + exp(a * (x - b))), start = list(a = 0.1, b = 1))\nsummary(m.rump.site)\nAIC(m.rump.site)\n\nx11(width = 4, height = 4)\nsite.rump <- ggplot(master.site, aes(x = rumple_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     xlim(c(0, 15))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     theme_new()+\n     xlab(\"Rumple\")+\n     ylab(\"fPAR\")+\n     geom_smooth(method = \"nls\",\n                 formula = y ~ 1 / (1 + exp(a * (x - b))),\n                 method.args = list(start = list(a = 0.1, b = 1)),\n                 se = FALSE,\n                 color = \"blue\",\n                 size = 1)\n\n# VAI\n# sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))\n\ny <- master.site$fPAR_mean\nx <- master.site$mean.vai_mean\n\n#m.vai.site <-nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))\nm.vai.site <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 0.1) )\nsummary(m.vai.site)\nAIC(m.vai.site)\n\n#coefficients\na <- coef(vai.model)[1] \nb <- coef(vai.model)[2]\n\nvai.fit <- function(x) {a / (1 + b * exp(-k * x))}\n\nx11(width = 4, height = 4)\nsite.vai <- ggplot(master.site, aes(x = mean.vai_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     theme_new()+\n     xlim(c(2, 8))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     xlab(\"VAI\")+\n     ylab(fpar.label)+\n     geom_smooth(method = \"nls\",\n                 formula = y ~ (1 / (1 + exp(-a * (x - b)))),\n                 method.args = list(start = list(a = 0.1, b = 1)),\n                 se = FALSE,\n                 color = \"blue\",\n                 size = 1)\n####################################\n#MOCH\ny <- master.site$fPAR_mean\nx <- master.site$mean.max.ht_mean\n# \nsite.moch.model <-nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\n\n#coefficients\na <- coef(site.moch.model)[1] \nb <- coef(site.moch.model)[2]\n\nsite.moch.fit <- function(x) { a + (b * log(x))}\n\n# AIC(site.moch.model)\n\nx11(width = 4, height = 4)\nsite.moch <- ggplot(master.site, aes(x = mean.max.ht_mean , y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     theme_new()+\n     xlim(c(5,25))+\n     ylim(c(0, 1))+\n     xlab(\"MOCH\")+\n     ylab(\"fPAR\")+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n    stat_function(fun = site.moch.fit, col = \"blue\", size = 1)\n\n\n##################################\n# Deep Gap Fraction. \nx11(width = 4, height = 4)\n\nsite.dg <- ggplot(master.site, aes(x = deep.gap.fraction_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     theme_new()+\n     xlim(c(0, 0.45))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     xlab(\"Deep Gap Fraction\")+\n     ylab(fpar.label)+\n     geom_smooth(method = \"lm\", size = 1, color = \"blue\", se = FALSE)\n\n# Gap Fraction/Sky Fraction\nx11(width = 4, height = 4)\nsummary(lm(master.site$fPAR_mean ~ master.site$cover.fraction_mean))\n\nsite.gf <- ggplot(master.site, aes(x = sky.fraction_mean / 100, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     theme_new()+\n     xlim(c(0, 0.6))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     scale_x_continuous(breaks = seq(0, 0.6, 0.3), limits = c(0, 0.6))+\n     xlab(expression(Theta))+\n     ylab(fpar.label)+\n     geom_smooth(method = \"lm\", size = 1, color = \"blue\", se = FALSE)\n\n# Clumping Index!\n# x <- master.site$clumping.index_mean\n# y <- master.site$fPAR_mean\n# m.site.ci <- nls(y ~ a + (b * log(x)), start = list(a = -0.1, b = 1))\n# AIC(m.site.ci)\n\nx11(width = 4, height = 4)\nsite.ci <- ggplot(master.site, aes(x = clumping.index_mean, y = fPAR_mean))+\n     geom_point(size = 2)+\n     geom_text_repel(data = master.site, aes(label = siteID))+\n     #scale_color_manual(values=cbPalette)+\n     #scale_color_brewer(palette=\"Dark2\")+\n     #geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) + \n     #geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+\n     theme_new()+\n     xlim(c(0.8, 1))+\n     scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+\n     scale_x_continuous(breaks = seq(0.8, 1, 0.1), limits = c(0.8, 1))+\n     xlab(expression(Omega))+\n     ylab(fpar.label)\n",
    "created" : 1515698021555.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2786900303",
    "id" : "EE4D1733",
    "lastKnownWriteTime" : 1515789242,
    "last_content_update" : 1515789242413,
    "path" : "C:/github/neon_csc_project/07_plots_for_publication.R",
    "project_path" : "07_plots_for_publication.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}