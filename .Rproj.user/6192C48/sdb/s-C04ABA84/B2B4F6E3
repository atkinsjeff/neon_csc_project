{
    "collab_server" : "",
    "contents" : "#06_site_light_model_runs\n\n# Required packages\nrequire(broom)\nrequire(ggplot2)\nrequire(nls2)\nrequire(MuMIn)\nsite.means <- read.csv(\"./data/laserquest_site_means_fpar_csc.csv\")\n\n\n#########################################\n##### canopy rugosity\n\ny <- site.means$fPAR_mean\nx <- site.means$rugosity_mean\n\n\nplot(x, y)\n\ndf <- data.frame(x, y)\n\n#model list\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = -1, b = -1))\nrec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1, b = 1, c = 1))\nsigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.5, b = 0.5))\nlog.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 1) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n\n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, rec.hyper2, sigmoidal.curve, log.growth,  logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\", \"rectangular hyperbola 2\", \"sigmoidal curve\", \"log growth\", \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n#####################################################\n##### TOP RUGOSITY\n##### \n\n\ny <- site.means$fPAR_mean\nx <- site.means$top.rugosity_mean\n\nplot(x, y)\n\ndf <- data.frame(x, y)\n\n#model list\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = -1, b = -1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.1, c = 2))\nsigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.5, b = 0.5))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 1) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n\n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, sigmoidal.curve,  logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\",  \"sigmoidal curve\",  \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n####################################################################\n##### Canopy Porosity\ny <- site.means$fPAR_mean\nx <- site.means$porosity_mean\n\nplot(x, y)\n\n# \ndf <- data.frame(x, y)\n# \n#model list\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\nrec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n\n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\", \"rectangular hyperbola 2\",  \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n\n###############################\n\n##### Rumple\ny <- site.means$fPAR_mean\nx <- site.means$rumple_mean\n\nplot(x, y)\n\n# \ndf <- data.frame(x, y)\n\n#model list\n\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1, b = 1.5, c = 5))\nsigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 1, k = -1) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n# \n# \n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, sigmoidal.curve, logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\",  \"s curve\", \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n\n\n###############################\n\n##### VAI\ny <- site.means$fPAR_mean\nx <- site.means$mean.vai_mean\n\nplot(x, y)\n\ndf <- data.frame(x, y)\n#model list\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 10, c = 100))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = -1, b = -1))\nlog.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 0.1) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, log.growth, logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\", \"log grwoth\", \"logarithmic\", \"power\", \"log\")\n\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n\n#####################################################\n\n##### MOCH\ny <- site.means$fPAR_mean\nx <- site.means$mean.max.ht_mean\n\nplot(x, y)\n\ndf <- data.frame(x, y)\n\n#model list\n\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1, b = 1, c = 10))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.5, b = -0.5))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b = 6, k = 0.1) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n# \n# \n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\", \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n#####################################################\n\n##### deep gap fraction\ny <- site.means$fPAR_mean\nx <- site.means$deep.gap.fraction_mean\n\nplot(x, y)\ndf <- data.frame(x, y)\n#model list\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1, b = 1, c = -11))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.5, b = 0.5))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 10.5, k = 0.01) )\n#logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = 1, b = 1))\n#power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\n#log                 <- lm(y ~ log(x))\n\n# \n# \n## Collates model list\nmodel.list <- list(linear.model, rec.hyper)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n#####################################################\n\n##### gap fraction\ny <- site.means$fPAR_mean\nx <- site.means$sky.fraction_mean\n\nplot(x, y)\ndf <- data.frame(x, y)\n#model list\n\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 1, b = 0.5, c = -0.5))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 10.5, k = 0.01) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = 1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n# \n# \n## Collates model list\nmodel.list <- list(linear.model, rec.hyper, logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\", \"logarithmic\",\"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n#####################################################\n\n#####  CLUMPING INDEX\ny <- site.means$fPAR_mean\nx <- site.means$clumping.index_mean\n\nplot(x, y)\n# \ndf <- data.frame(x, y)\n\n#### Michaelis Menten equation ### generating some data\n# building a Self Start object, finding the optimal values\nprint(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)  \n\nlinear.model        <- lm(y ~ x)\nrec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))\n#rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0.001, b = 0.01, c = -0.01))\n#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.05, b = 0.05))\n#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b = 1, k = 0.01) )\nlogarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = 1, b = 1))\npower               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))\nlog                 <- lm(y ~ log(x))\n\n# \n# \n## Collates model list\nmodel.list <- list(linear.model, rec.hyper,  logarithmic, power, log)\n\n#names the model items\nnames(model.list) <- c(\"linear.model\",\"rectangular hyperbola\",  \"logarithmic\", \"power\", \"log\")\n\n#### AIC and summary stats\n#AIC\nlapply(model.list, AIC)\nlapply(model.list, AICc)\nlapply(model.list, tidy)\n\n# List of R-squared values. Unadjusted.\nfor (name in names(model.list)) {\n  \n  #model Name\n  \n  #R squared\n  RSS <- sum(residuals(model.list[[name]])^2)\n  TSS <- sum((y - mean(y))^2)\n  r2 = 1 - (RSS/TSS)\n  print(name)\n  print(r2)\n}\n\n",
    "created" : 1515527438522.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1138389692",
    "id" : "B2B4F6E3",
    "lastKnownWriteTime" : 1515692378,
    "last_content_update" : 1515692378423,
    "path" : "C:/github/neon_csc_project/06_site_light_model_runs.R",
    "project_path" : "06_site_light_model_runs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}