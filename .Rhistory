lapply(model.list, tidy)
require(plyr)
require(dplyr)
require(MuMIn)
##### Canopy Porosity
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))
#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))
#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )
logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
log                 <- lm(y ~ log(x))
## Collates model list
model.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)
#names the model items
names(model.list) <- c("linear.model","rectangular hyperbola", "rectangular hyperbola 2",  "logarithmic", "power", "log")
#### AIC and summary stats
#AIC
lapply(model.list, AIC)
lapply(model.list, AICc)
lapply(model.list, tidy)
require(tidyr)
##### Canopy Porosity
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))
#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))
#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )
logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
log                 <- lm(y ~ log(x))
## Collates model list
model.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)
#names the model items
names(model.list) <- c("linear.model","rectangular hyperbola", "rectangular hyperbola 2",  "logarithmic", "power", "log")
#### AIC and summary stats
#AIC
lapply(model.list, AIC)
lapply(model.list, AICc)
lapply(model.list, tidy)
require(broom)
require(ggplot2)
require(nls2)
require(MuMIn)
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))
#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))
#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )
logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
log                 <- lm(y ~ log(x))
## Collates model list
model.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)
#names the model items
names(model.list) <- c("linear.model","rectangular hyperbola", "rectangular hyperbola 2",  "logarithmic", "power", "log")
#### AIC and summary stats
#AIC
lapply(model.list, AIC)
lapply(model.list, AICc)
lapply(model.list, tidy)
a * (x^b)
summary(lm(master.site$fPAR_mean ~ master.site$porosity_mean))
y <- master.site$fPAR_mean
x <- master.site$porosity_mean
pc.site.model <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
summary(pc.site.model)
pc.site.fit <- function(x) { 0.5483 * (x^-1.3075)}
x11(width = 4, height = 4)
site.pc <- ggplot(master.site, aes(x = porosity_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(porosity_mean, fPAR_mean, label = siteID), force = 10)+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(0.6, 1))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab(expression("P"[C]))+
ylab(fpar.label)+
stat_function(fun = pc.site.fit, col = "blue", size = 1)
site.pc
for (name in names(model.list)) {
#R squared
RSS <- sum(residuals(model.list[[name]])^2)
TSS <- sum((y - mean(y))^2)
r2 = 1 - (RSS/TSS)
print(name)
print(r2)
}
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))
#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))
#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )
logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
log                 <- lm(y ~ log(x))
## Collates model list
model.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)
#names the model items
names(model.list) <- c("linear.model","rectangular hyperbola", "rectangular hyperbola 2",  "logarithmic", "power", "log")
#### AIC and summary stats
#AIC
lapply(model.list, AIC)
lapply(model.list, AICc)
lapply(model.list, tidy)
# List of R-squared values. Unadjusted.
for (name in names(model.list)) {
#R squared
RSS <- sum(residuals(model.list[[name]])^2)
TSS <- sum((y - mean(y))^2)
r2 = 1 - (RSS/TSS)
print(name)
print(r2)
}
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
##### Canopy Porosity
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
site.means
y <- site.means$fPAR_mean
x <- site.means$porosity_mean
plot(x, y)
#
df <- data.frame(x, y)
#
#model list
#### Michaelis Menten equation ### generating some data
# building a Self Start object, finding the optimal values
print(getInitial(y ~ SSmicmen(x, max(y), 1), data = df), digits = 3)
linear.model        <- lm(y ~ x)
rec.hyper           <- nls(y ~ (a * x) / (b + x), start = list(a = 1, b = 1))
rec.hyper2          <- nls(y ~ a + ((b * x) / (c + x)), start = list(a = 0, b = 0.38, c = -0.8))
#sigmoidal.curve     <- nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 1, b = 1))
#log.growth          <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = -1, b = 0.38, k = 0.38) )
logarithmic         <- nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
power               <- nls(y ~ a * (x^b), start = list(a = 1, b = 1))
log                 <- lm(y ~ log(x))
## Collates model list
model.list <- list(linear.model, rec.hyper, rec.hyper2,   logarithmic, power, log)
#names the model items
names(model.list) <- c("linear.model","rectangular hyperbola", "rectangular hyperbola 2",  "logarithmic", "power", "log")
#### AIC and summary stats
#AIC
lapply(model.list, AIC)
lapply(model.list, AICc)
lapply(model.list, tidy)
# List of R-squared values. Unadjusted.
for (name in names(model.list)) {
#R squared
RSS <- sum(residuals(model.list[[name]])^2)
TSS <- sum((y - mean(y))^2)
r2 = 1 - (RSS/TSS)
print(name)
print(r2)
}
x11(width = 4, height = 4)
site.pc <- ggplot(master.site, aes(x = porosity_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(porosity_mean, fPAR_mean, label = siteID), force = 10)+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(0.6, 1))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab(expression("P"[C]))+
ylab(fpar.label)+
geom_smooth(method = lm, se = FALSE, col = "blue", size = 1)
site.pc
summary(linear.model)
y <- master.site$fPAR_mean
x <- master.site$rumple_mean
m.rump.site<- nls(y ~ 1 / (1 + exp(a * (x - b))), start = list(a = 0.1, b = 1))
summary(m.rump.site)
AIC(m.rump.site)
x11(width = 4, height = 4)
site.rump <- ggplot(master.site, aes(x = rumple_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
xlim(c(0, 15))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
theme_new()+
xlab("Rumple")+
ylab("fPAR")+
geom_smooth(method = "nls",
formula = y ~ 1 / (1 + exp(a * (x - b))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
ggplot(master.site, aes(x = rumple_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
xlim(c(0, 15))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
theme_new()+
xlab("Rumple")+
ylab("fPAR")+
geom_smooth(method = "nls",
formula = y ~ 1 / (1 + exp(a * (x - b))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
ggplot(master.site, aes(x = rumple_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
xlim(c(0, 15))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
theme_new()+
xlab("Rumple")+
ylab("fPAR")+
geom_smooth(method = "nls",
formula = y ~ 1 / (1 + exp(a * (x - b))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
m.vai.site <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 0.1) )
y <- master.site$fPAR_mean
x <- master.site$mean.vai_mean
#m.vai.site <-nls(y ~ (1 / (1 + exp(-a * (x - b)))), start = list(a = 0.1, b = 1))
m.vai.site <- nls(y ~ a / (1 + b * exp(-k * x)), start = list(a = 1, b =1, k = 0.1) )
summary(m.vai.site)
AIC(m.vai.site)
#coefficients
a <- coef(vai.model)[1]
b <- coef(vai.model)[2]
vai.fit <- function(x) {a / (1 + b * exp(-k * x))}
x11(width = 4, height = 4)
site.vai <- ggplot(master.site, aes(x = mean.vai_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(2, 8))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("VAI")+
ylab(fpar.label)+
geom_smooth(method = "nls",
formula = y ~ (1 / (1 + exp(-a * (x - b)))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
ggplot(master.site, aes(x = mean.vai_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(2, 8))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("VAI")+
ylab(fpar.label)+
geom_smooth(method = "nls",
formula = y ~ (1 / (1 + exp(-a * (x - b)))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
ggplot(master.site, aes(x = mean.vai_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(2, 8))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("VAI")+
ylab(fpar.label)+
geom_smooth(method = "nls",
formula = y ~ (1 / (1 + exp(-a * (x - b)))),
method.args = list(start = list(a = 0.1, b = 1)),
se = FALSE,
color = "blue",
size = 1)
y <- master.site$fPAR_mean
x <- master.siteh$mean.max.ht_mean
#
site.moch.model <-nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
#MOCH
y <- master.site$fPAR_mean
x <- master.site$mean.max.ht_mean
#
site.moch.model <-nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
#MOCH
y <- master.site$fPAR_mean
x <- master.site$mean.max.ht_mean
#
site.moch.model <-nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
#coefficients
a <- coef(site.moch.model)[1]
b <- coef(site.moch.model)[2]
site.moch.fit <- function(x) { a + (b * log(x))}
# AIC(site.moch.model)
x11(width = 4, height = 4)
site.moch <- ggplot(master.site, aes(x = mean.max.ht_mean , y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
theme_new()+
xlim(c(5,25))+
ylim(c(0, 1))+
xlab("MOCH")+
ylab("fPAR")+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
stat_function(fun = site.moch.fit, col = "blue", size = 1)
site.moch
#MOCH
y <- master.site$fPAR_mean
x <- master.site$mean.max.ht_mean
#
site.moch.model <-nls(y ~ a + (b * log(x)), start = list(a = -1, b = 1))
#coefficients
a <- coef(site.moch.model)[1]
b <- coef(site.moch.model)[2]
site.moch.fit <- function(x) { a + (b * log(x))}
# AIC(site.moch.model)
x11(width = 4, height = 4)
site.moch <- ggplot(master.site, aes(x = mean.max.ht_mean , y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
theme_new()+
xlim(c(5,25))+
ylim(c(0, 1))+
xlab("MOCH")+
ylab("fPAR")+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
stat_function(fun = site.moch.fit, col = "blue", size = 1)
site.moch
x11(width = 4, height = 4)
site.dg <- ggplot(master.site, aes(x = deep.gap.fraction_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
theme_new()+
xlim(c(0, 0.45))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("Deep Gaps")+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
site.dg
ggplot(master.site, aes(x = deep.gap.fraction_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
theme_new()+
xlim(c(0, 0.45))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("Deep Gaps")+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
ggplot(master.site, aes(x = deep.gap.fraction_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
theme_new()+
xlim(c(0, 0.45))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
xlab("Deep Gap Fraction")+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
x11(width = 4, height = 4)
summary(lm(master.site$fPAR_mean ~ master.site$cover.fraction_mean))
site.gf <- ggplot(master.site, aes(x = sky.fraction_mean / 100, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
theme_new()+
xlim(c(0, 0.6))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
scale_x_continuous(breaks = seq(0, 0.6, 0.3), limits = c(0, 0.6))+
xlab(expression(Theta))+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
ggplot(master.site, aes(x = sky.fraction_mean / 100, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = site))+
theme_new()+
xlim(c(0, 0.6))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
scale_x_continuous(breaks = seq(0, 0.6, 0.3), limits = c(0, 0.6))+
xlab(expression(Theta))+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
ggplot(master.site, aes(x = sky.fraction_mean / 100, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
theme_new()+
xlim(c(0, 0.6))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
scale_x_continuous(breaks = seq(0, 0.6, 0.3), limits = c(0, 0.6))+
xlab(expression(Theta))+
ylab(fpar.label)+
geom_smooth(method = "lm", size = 1, color = "blue", se = FALSE)
x11(width = 4, height = 4)
site.ci <- ggplot(master.site, aes(x = clumping.index_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(0.8, 1))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
scale_x_continuous(breaks = seq(0.8, 1, 0.1), limits = c(0.8, 1))+
xlab(expression(Omega))+
ylab(fpar.label)
ggplot(master.site, aes(x = clumping.index_mean, y = fPAR_mean))+
geom_point(size = 2)+
geom_text_repel(data = master.site, aes(label = siteID))+
#scale_color_manual(values=cbPalette)+
#scale_color_brewer(palette="Dark2")+
#geom_errorbarh(aes(xmin =rugosity_mean - rugosity_sd, xmax = rugosity_mean + rugosity_sd)) +
#geom_errorbar(aes(ymin = fPAR_mean - fPAR_sd, ymax = fPAR_mean + fPAR_sd))+
theme_new()+
xlim(c(0.8, 1))+
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0.2, 1))+
scale_x_continuous(breaks = seq(0.8, 1, 0.1), limits = c(0.8, 1))+
xlab(expression(Omega))+
ylab(fpar.label)
str(high)
str(low)
require(plyr)
require(ggplot2)
require(dplyr)
require(vegan)
require(ggrepel)
require(magrittr)
citation(plyr)
citation("plyr")
citation("dplyr")
citation("ggrepel")
citation("ggplot2")
citation("MuMin")
citation("MuMIn")
citation("broom")
citation("nls2")
citation("tidyr")
